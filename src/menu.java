
import javax.swing.JFrame;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.mysql.cj.jdbc.result.ResultSetMetaData;
import javax.swing.JOptionPane;
import java.io.FileOutputStream;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Date;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Aakriti
 */
public class menu extends javax.swing.JFrame {

    /**
     * Creates new form menu
     */
    public menu() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        empmenu = new javax.swing.JMenuItem();
        allomenu = new javax.swing.JMenuItem();
        dedmenu = new javax.swing.JMenuItem();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        empmenu.setText("Employee RP");
        empmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empmenuActionPerformed(evt);
            }
        });
        jPopupMenu1.add(empmenu);

        allomenu.setText("Allowance RP");
        allomenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allomenuActionPerformed(evt);
            }
        });
        jPopupMenu1.add(allomenu);

        dedmenu.setText("Deduction RP");
        dedmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dedmenuActionPerformed(evt);
            }
        });
        jPopupMenu1.add(dedmenu);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jButton1.setBackground(new java.awt.Color(51, 51, 51));
        jButton1.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Allowance");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(540, 100, 230, 60);

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Update Salary");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(130, 220, 310, 60);

        jButton3.setBackground(new java.awt.Color(51, 51, 51));
        jButton3.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Deduction");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(540, 220, 220, 60);

        jButton4.setBackground(new java.awt.Color(51, 51, 51));
        jButton4.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Payment slip");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(890, 100, 230, 60);

        jButton5.setBackground(new java.awt.Color(51, 51, 51));
        jButton5.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(1240, 100, 200, 60);

        jButton6.setBackground(new java.awt.Color(51, 51, 51));
        jButton6.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Report");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(890, 220, 230, 60);

        jButton7.setBackground(new java.awt.Color(51, 51, 51));
        jButton7.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("About");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7);
        jButton7.setBounds(1240, 230, 200, 60);

        jButton9.setBackground(new java.awt.Color(51, 51, 51));
        jButton9.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Employee Registration");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9);
        jButton9.setBounds(130, 100, 310, 60);

        jButton8.setBackground(new java.awt.Color(0, 0, 0));
        jButton8.setFont(new java.awt.Font("Sitka Text", 1, 24)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Logout");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8);
        jButton8.setBounds(1280, 410, 160, 60);

        jLabel1.setBackground(new java.awt.Color(204, 204, 255));
        jLabel1.setForeground(new java.awt.Color(255, 102, 102));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pngwing.com (3)new.png"))); // NOI18N
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, -10, 2610, 1250);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
         new employee().setVisible(true);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         new deduction().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
jPopupMenu1.show(jButton6, jButton6.getWidth()/2  , jButton6.getHeight()/2  );
       
       
    }//GEN-LAST:event_jButton6ActionPerformed

    private void empmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empmenuActionPerformed
 
    PreparedStatement ps = null;
    ResultSet rs = null;
             try { 
    Document document = new Document();
    
   String filePath = "C:\\Users\\ACER\\OneDrive\\Desktop\\Project PDF/GeneratedPDF.pdf";
    //String filePath = "D:\\a/Payment Slip.pdf";
                 
PdfWriter.getInstance(document, new FileOutputStream(filePath));
 document.open();
   document.add(new Paragraph("Generated on: " + new Date().toString()));
            document.add(new Paragraph("----------------------------------------------------------------------------------------------------------------------------"));
             Font boldFont = new Font(Font.FontFamily.HELVETICA, 16, Font.BOLD); 
            document.add(new Paragraph("                                      Employee Details Report",boldFont));
            document.add(new Paragraph("----------------------------------------------------------------------------------------------------------------------------"));

    
      // Create a table with appropriate number of columns
            PdfPTable table = new PdfPTable(10); // Adjust column count based on your data
            table.setWidthPercentage(110); // Make the table occupy full width
            table.setSpacingBefore(10f); // Add some spacing before the table
            table.setSpacingAfter(10f);
            
             float[] columnWidths = {1f, 2f, 2f, 3f, 2f, 1.5f, 2.5f, 2.5f, 2f, 2f};
            table.setWidths(columnWidths);

            // Add table headers
            String[] headers = {
                "ID", "First Name", "Last Name", "Address", 
                "Date of Birth", "Gender", "Department", 
                "Job Title", "Salary", "Contact"
            };
             Font headerFont = new Font(Font.FontFamily.HELVETICA, 10, Font.NORMAL); // Bold font for headers
            for (String header : headers) {
                PdfPCell cell = new PdfPCell(new Paragraph(header, headerFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);
            }

            // Regular font for employee data
            Font dataFont = new Font(Font.FontFamily.HELVETICA, 10, Font.NORMAL);
            // Query the database
            String query = "SELECT * FROM empregister";
            ps = db.connect().prepareStatement(query);
            rs = ps.executeQuery();

            // Add rows to the table
            while (rs.next()) {
                PdfPCell cell;

                cell = new PdfPCell(new Paragraph(rs.getString("id"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("firstname"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("lastname"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("address"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("dateofbirth"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("gender"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("department"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("jobtitle"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("salary"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("contact"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);
            
            }

            // Add table to document
            document.add(table);
            
            // Close the document
            document.close();

            // Notify user of success
             // Show success message
            JOptionPane.showMessageDialog(null, "PDF created successfully!");
        } catch (Exception ex) {
            // Handle any exceptions (e.g., file errors, iText issues)
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        }
    
    }//GEN-LAST:event_empmenuActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       new allowance ().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         new updatesalary ().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
         new paymentslip ().setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
         int p= JOptionPane.showConfirmDialog(null, "Are you sure you want to logout?", "Logout", JOptionPane.YES_NO_OPTION);
         if (p==0){
        new login ().setVisible(true);
         }
         else{
             JOptionPane.showMessageDialog(null, "Unable to logout");
         }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        new search().setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
         new about().setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void allomenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allomenuActionPerformed
          PreparedStatement ps = null;
    ResultSet rs = null;
             try { 
    Document document = new Document();
    
   String filePath = "C:\\Users\\ACER\\OneDrive\\Desktop\\Project PDF/GeneratedPDF.pdf";
    //String filePath = "D:\\a/Payment Slip.pdf";
                 
PdfWriter.getInstance(document, new FileOutputStream(filePath));
 document.open();
   document.add(new Paragraph("Generated on: " + new Date().toString()));
            document.add(new Paragraph("----------------------------------------------------------------------------------------------------------------------------"));
             Font boldFont = new Font(Font.FontFamily.HELVETICA, 16, Font.BOLD); 
            document.add(new Paragraph("                                      Allowance Report",boldFont));
            document.add(new Paragraph("----------------------------------------------------------------------------------------------------------------------------"));

    
      // Create a table with appropriate number of columns
            PdfPTable table = new PdfPTable(14); // Adjust column count based on your data
            table.setWidthPercentage(110); // Make the table occupy full width
            table.setSpacingBefore(10f); // Add some spacing before the table
            table.setSpacingAfter(10f);
            
             float[] columnWidths = {1f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f, 2f,2f};
            table.setWidths(columnWidths);

            // Add table headers
            String[] headers = {
                "ID", "First Name", "Last Name", 
                "Department", "Salary", "Overtime", "Bonus", "Other", "CIF", "PF", "Total overtime", "Rate Per Hour", "Calculated Amount", "Total Amount "
            };
             Font headerFont = new Font(Font.FontFamily.HELVETICA, 10, Font.NORMAL); // Bold font for headers
            for (String header : headers) {
                PdfPCell cell = new PdfPCell(new Paragraph(header, headerFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);
            }

            // Regular font for employee data
            Font dataFont = new Font(Font.FontFamily.HELVETICA, 10, Font.NORMAL);
            // Query the database
            String query = "SELECT * FROM allowance";
            ps = db.connect().prepareStatement(query);
            rs = ps.executeQuery();

            // Add rows to the table
            while (rs.next()) {
                PdfPCell cell;

                cell = new PdfPCell(new Paragraph(rs.getString("allowance_id"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("first_name"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("last_name"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);




                cell = new PdfPCell(new Paragraph(rs.getString("Department"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);


                cell = new PdfPCell(new Paragraph(rs.getString("salary"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);
 
                
                cell = new PdfPCell(new Paragraph(rs.getString("Overtime"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("Bonus"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("Other"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                /*cell = new PdfPCell(new Paragraph(rs.getString("CIF"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("ProvidentFund"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);*/
                
                cell = new PdfPCell(new Paragraph(rs.getString("TotalOvertime"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("RatePerHour"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("Calculated amt"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("TotalAmount"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

               

            
            }

            // Add table to document
            document.add(table);
            
            // Close the document
            document.close();

            // Notify user of success
             // Show success message
            JOptionPane.showMessageDialog(null, "PDF created successfully!");
        } catch (Exception ex) {
            // Handle any exceptions (e.g., file errors, iText issues)
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        }
    }//GEN-LAST:event_allomenuActionPerformed

    private void dedmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dedmenuActionPerformed
        
    PreparedStatement ps = null;
    ResultSet rs = null;
             try { 
    Document document = new Document();
    
   String filePath = "C:\\Users\\ACER\\OneDrive\\Desktop\\Project PDF/GeneratedPDF.pdf";
    //String filePath = "D:\\a/Payment Slip.pdf";
                 
PdfWriter.getInstance(document, new FileOutputStream(filePath));
 document.open();
   document.add(new Paragraph("Generated on: " + new Date().toString()));
            document.add(new Paragraph("----------------------------------------------------------------------------------------------------------------------------"));
             Font boldFont = new Font(Font.FontFamily.HELVETICA, 16, Font.BOLD); 
            document.add(new Paragraph("                                      Deduction Details Report",boldFont));
            document.add(new Paragraph("----------------------------------------------------------------------------------------------------------------------------"));

    
      // Create a table with appropriate number of columns
            PdfPTable table = new PdfPTable(8); // Adjust column count based on your data
            table.setWidthPercentage(110); // Make the table occupy full width
            table.setSpacingBefore(10f); // Add some spacing before the table
            table.setSpacingAfter(10f);
            
             float[] columnWidths = {1f, 2f, 2f, 2f, 2f, 2f, 2.5f, 2.5f,};
            table.setWidths(columnWidths);

            // Add table headers
            String[] headers = {
                "ID", "First Name", "Last Name", 
                "Date of Birth","Department", 
                "Job Title", "Salary", "Deduction Amt"
            };
             Font headerFont = new Font(Font.FontFamily.HELVETICA, 10, Font.NORMAL); // Bold font for headers
            for (String header : headers) {
                PdfPCell cell = new PdfPCell(new Paragraph(header, headerFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);
            }

            // Regular font for employee data
            Font dataFont = new Font(Font.FontFamily.HELVETICA, 10, Font.NORMAL);
            // Query the database
            String query = "SELECT * FROM deductions";
            ps = db.connect().prepareStatement(query);
            rs = ps.executeQuery();

            // Add rows to the table
            while (rs.next()) {
                PdfPCell cell;

                cell = new PdfPCell(new Paragraph(rs.getString("deduction_id"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("first_name"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("last_name"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

               

                cell = new PdfPCell(new Paragraph(rs.getString("DateOfBirth"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

               

                cell = new PdfPCell(new Paragraph(rs.getString("Department"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("jobTitle"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("salary"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);

                cell = new PdfPCell(new Paragraph(rs.getString("deduction_amount"), dataFont));
                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                table.addCell(cell);
            
            }

            // Add table to document
            document.add(table);
            
            // Close the document
            document.close();

            // Notify user of success
             // Show success message
            JOptionPane.showMessageDialog(null, "PDF created successfully!");
        } catch (Exception ex) {
            // Handle any exceptions (e.g., file errors, iText issues)
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        }
    
    }//GEN-LAST:event_dedmenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem allomenu;
    private javax.swing.JMenuItem dedmenu;
    private javax.swing.JMenuItem empmenu;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    // End of variables declaration//GEN-END:variables
}
